1. 接口都是 抽象方法的，没有实际值和实际方法。定义标准
interface myInter {
    name: string;
    satHello(): void;
}

class MyClass implement myInter {}

抽象类里面可以有实际方法, extends

2.  private 时，它只能在该类内部被访问

折中：protected 成员对于该类及其子类是可见的，但对于该类的实例或外部代码是不可见的

public 可以访问

3. 范型
    function fn<T>(a: T): T{
        return a;
    }
    let result = fn(10);
    let result2 = fn<string>('hello');

4. https://vue3js.cn/interview/typescript/high%20type.html#%E4%BA%8C%E3%80%81%E6%9C%89%E5%93%AA%E4%BA%9B
    交叉类型
    联合类型
    类型别名
    类型索引
    类型约束
    映射类型
    条件类型