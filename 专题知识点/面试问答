
自我介绍：
面试官你好，我叫，之前的工作经历是三年多的时间在腾讯teg的安全中心，做前端工作，

技术上、主要用的vue2  vue3和ts ,
对webpack和vite和vue3的实现原理也有一定了解
用go和php做BFF层中间件，进行处理数据 ，合并后端api, 和操作MySQL，

项目上，涉及的内容主要 多角色权限管理、自定义表单设计器、审批流、数据可视化工作
it安全平台0-1都是我负责的，主要难点在于前端设计json schema的表单设计器，以及解决对于顺序审批并行审批复杂逻辑的处理

团队协作上，当时组里还有5位外包成员，也需要去做沟通协调分配任务，帮助解决风险点的工作。



角色权限管理如何实现：
基于角色的访问控制(RBAC)模型，它通过角色作为用户和权限之间的桥梁
1. 因为角色页面权限频繁修改，菜单路由权限和api权限管理，相关数据存储在数据库中，通过中间件实现权限校验
2. 菜单数据通过模版数据传递给前端，前端不需要再进行数据请求，减少网络请求 
3. 分层设计，API层、业务层、数据访问层，每层职责明确
4. 权限管理核心功能接口进行抽象，实现其他项目复用，只需要修改角色模型


表单怎么实现：
组件注册层：实现UI库组件映射系统，做一层抽象， 支持多UI库
渲染层：递归组件支持多级嵌套结构 + 动态组件加载 + （依赖追踪：仅比较关联字段 + 收集依赖，只更新变化部分）
联动控制层：递归解析路径获取表单字段 + 处理同步/异步联动 通过 沙箱执行 + 同步联动 支持写条件判断  + 异步联动 请求缓存 + 防抖机制 
校验层：AJV编译校验 + 自定义规则扩展
   


手写plugin:
回答怎么实现这个插件的：
1. 首先，在插件的apply方法中，注册compilation钩子，用于访问编译对象。
2. 在compilation的buildModule钩子中，监听模块创建事件，分析模块的依赖。
3. 使用AST解析器（如@babel/parser）来分析导入语句，提取组件名称。
4. 维护一个数据结构（如Map）来记录每个组件的引用次数和引用来源。
5. 在compilation的finishModules钩子中，遍历所有模块，统计引用次数。
6. 在compilation的optimizeDependencies钩子中，标记未使用的模块。
7. 在compiler的emit钩子中，生成统计报告，并作为资源添加到构建输出中。
8. 最后，在插件的apply方法中，将插件实例添加到Webpack的插件列表中。
 

写过有价值的技术文章： 介绍json schema表单设计器，手写plugin



简介：
 腾讯大厂三年多经验，主导企业级安全服务平台（Vue3+Vue2+Go全栈）从0到1落地，拥有3年前端开发经验，
 擅长通过低代码、可视化工具提效50%+。
 独立管理5人外包团队，沉淀30+技术文档，能快速为您的团队输出标准化方案。
 若贵司需要兼具深度与广度的技术人员，期待进一步沟通！

