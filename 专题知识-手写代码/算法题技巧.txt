算法题小技巧：
1. 对于环状的字符串，可以拼接自身，然后去substring截取想要的效果
2. 拆分问题，只关注“大于“部份的解，只看一边的视角
3. 看前缀，startsWith， str1.substring(0, length)
4. 动态规划，求最长递增子序列
5. 过滤选中的值，移除元素，for循环 一个k值，符合的值就操作，然后k递增
6. 二分查找，注意左右的闭合
7. 双指针法 while(++l < --r) [resArr[l], resArr[r]] = [resArr[r], resArr[l]];
8. 数组操作中另一个重要的方法：滑动窗口， 也可以理解为双指针法，一个头一个尾，不断缩小距离O(n)
9. 螺旋矩阵II 圈数=n/2， loop--, 4个for
10. 其实很多数组填充类的问题，其做法都是先预先给数组扩容带填充后的大小，然后在从后向前进行操作
11. 不能申请额外空间，只能在本串上操作： 通过 整体倒叙，把两段子串顺序颠倒，两个段子串里的的字符在倒叙一把，
负负得正，这样就不影响子串里面字符的顺序了。


1. 哈希类型的，使用set 或 map，
    1. 两数之和，  从左往右遍历，不通过的逐步添加，就可以避免重复 [hashtable.get(target - nums[i]), i];
    2. 最长连续序列， 确定递增，从边界值开始，确定有没有比它小的 set.has(num - 1)，  while (num_set.has(currentNum + 1))
    3. 字母异位词分组, 通过map, key是排序后一样的值，value是数组 Array.from(map.values())
2. 双指针：
   1. 三数之和，头尾移动，判断while (left < right)
   2. 移动零, 快慢指针，1当快指针遇到非零元素时，与慢指针位置交换， 2交换后慢指针前移，保证慢指针左侧全是非零元素
   3. 盛最多水的容器, 往中间收敛的双指针，判断出条件，找出短板
3. 滑动窗口
    1. 找到字符串中所有字母异位词，  ++sCount[s[i + pLen].charCodeAt() - 'a'.charCodeAt()];
4. 动态规划
    爬楼梯、斐波那契、


   for (let i = 0; i < 10; i++) {
     for (let j = 0; j < 10; j++) {
        console.log(i, j);
     } 
   }



   
数组题：
1. 合并区间，取最大的结束点
if (current[0] <= last[1]) {
    // 合并区间，取最大的结束点
    last[1] = Math.max(last[1], current[1]);
} 
2. 和为 K 的子数组 暴力解法
3.  53. 最大子数组和

        返回其最大和。nums = [-2,1,-3,4,-1,2,1,-5,4]
        输出：6
        解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。
        curMax = Math.max(nums[i], curMax + nums[i]);
        totalMax = Math.max(totalMax, curMax);

4. 反转数组
    k = k % n;
    reverse(nums, 0, n-1); // 整体反转
    reverse(nums, 0, k-1); // 反转前k个
    reverse(nums, k, n-1); // 反转剩下的部分


字符串：
toUpperCase()，大写， toLowerCase()
charAtCode(), A大写的是65, 小写反而是97， 判断大小写就转化一次然后比较

哈希，出现次数超过一半，排序后直接去中位数
let map = new Map();
map.has, map.set , map.get, 遍历过程最后一步可以取值做判断



如何科学刷题？

滑动窗口与双指针（定长/不定长/单序列/双序列/三指针/分组循环）
二分算法（二分答案/最小化最大值/最大化最小值/第K小）
单调栈（基础/矩形面积/贡献法/最小字典序）
网格图（DFS/BFS/综合应用）
位运算（基础/性质/拆位/试填/恒等式/思维）
图论算法（DFS/BFS/拓扑排序/最短路/最小生成树/二分图/基环树/欧拉路径）
动态规划（入门/背包/状态机/划分/区间/状压/数位/数据结构优化/树形/博弈/概率期望）
常用数据结构（前缀和/差分/栈/队列/堆/字典树/并查集/树状数组/线段树）
数学算法（数论/组合/概率期望/博弈/计算几何/随机算法）
贪心与思维（基本贪心策略/反悔/区间/字典序/数学/思维/脑筋急转弯/构造）
链表、二叉树与回溯（前后指针/快慢指针/DFS/BFS/直径/LCA/一般树）
字符串（KMP/Z函数/Manacher/字符串哈希/AC自动机/后缀数组/子序列自动机）


 title 前端面试算法考察分布
    "数组/字符串处理" : 35
    "滑动窗口/双指针" : 20
    "基础动态规划" : 15